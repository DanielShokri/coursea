generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearch"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id              String             @id
  email           String             @unique
  name            String
  password        String
  token           String?
  role            Role               @default(STUDENT)
  coursesEnrolled CourseEnrollment[]
  createdAt       DateTime           @default(now())
  updatedAt       DateTime           @updatedAt
  reviews         Review[]
  taughtCourses   Course[]           @relation(name: "instructorUser")

  @@map("users")
}

model Course {
  id                String             @id
  slug              String             @unique
  title             String
  description       String
  instructor        User               @relation(name: "instructorUser", fields: [instructorId], references: [id])
  instructorId      String
  imageUrl          String
  courseEnrollments CourseEnrollment[]
  price             Float
  level             String             @default("Beginner")
  rating            Float?
  numRatings        Int?
  createdAt         DateTime           @default(now())
  updatedAt         DateTime           @updatedAt
  Review            Review[]

  @@map("courses")
}

model CourseEnrollment {
  id           String   @id
  user         User     @relation(fields: [userId], references: [id])
  userId       String
  course       Course   @relation(fields: [courseId], references: [id])
  courseId     String
  dateEnrolled DateTime @default(now())

  @@map("course_enrollments")
}

model Review {
  id         String   @id
  reviewer   User     @relation(fields: [reviewerId], references: [id])
  reviewerId String
  course     Course   @relation(fields: [courseId], references: [id])
  courseId   String
  rating     Float
  comment    String
  createdAt  DateTime @default(now())

  @@map("reviews")
}

enum Role {
  STUDENT
  INSTRUCTOR
}
