generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearch"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id              String             @id
  email           String             @unique
  name            String
  password        String
  token           String?
  role            Role               @default(STUDENT)
  coursesEnrolled CourseEnrollment[]
  createdAt       DateTime           @default(now())
  updatedAt       DateTime           @updatedAt
  reviews         Review[]
  taughtCourses   Course[]           @relation(name: "instructorUser")

  @@map("users")
}

model Course {
  id                String             @id
  slug              String             @unique
  title             String
  description       String
  instructor        User               @relation(name: "instructorUser", fields: [instructorId], references: [id])
  instructorId      String
  imageUrl          String
  courseEnrollments CourseEnrollment[]
  price             Int                @default(0)
  level             String             @default("Beginner")
  rating            Int?               @default(0)
  numRatings        Int?
  createdAt         DateTime           @default(now())
  updatedAt         DateTime           @updatedAt
  reviews           Review[]
  Tags              Tags?              @relation(fields: [tagsId], references: [id])
  tagsId            String?
  tools             String[]           @default([])
  modules           Modules[]          @relation(fields: [modulesId], references: [id])

  @@map("courses")
}

model CourseEnrollment {
  id           String   @id
  user         User     @relation(fields: [userId], references: [id])
  userId       String
  course       Course   @relation(fields: [courseId], references: [id])
  courseId     String
  dateEnrolled DateTime @default(now())

  @@map("course_enrollments")
}

model Modules {
  id       String @id
  title    String
  courseId String

  @@map("modules")
}

model Review {
  id         String   @id
  reviewer   User     @relation(fields: [reviewerId], references: [id])
  reviewerId String
  course     Course   @relation(fields: [courseId], references: [id])
  courseId   String
  rating     Float
  comment    String
  createdAt  DateTime @default(now())

  @@map("reviews")
}

model Tags {
  id      String   @id
  name    String   @unique
  courses Course[]

  @@map("tags")
}

enum Role {
  STUDENT
  INSTRUCTOR
}
